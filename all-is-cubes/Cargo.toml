[package]
name = "all-is-cubes"
version = "0.6.0"
authors = ["Kevin Reid <kpreid@switchb.org>"]
edition = "2021"
rust-version = "1.70"
description = "Recursive voxel game engine. Can be used for voxel raytracing."
# TODO: add homepage = "..." when we have one
repository = "https://github.com/kpreid/all-is-cubes"
license = "MIT OR Apache-2.0"
# TODO: revisit categories once it's more settled how useful this is as a game engine
categories = ["games", "graphics", "rendering::engine"]

[package.metadata.docs.rs]
features = ["arbitrary"]

[lib]
# Disable running as benchmark so that the default doesn't interfere with Criterion usage.
bench = false

[[bench]]
name = "block_bench"
harness = false

[[bench]]
name = "chunk_bench"
harness = false

[[bench]]
name = "lighting_bench"
harness = false

[[bench]]
name = "raycast_bench"
harness = false

[[bench]]
name = "raytrace_bench"
harness = false

[[bench]]
name = "save_bench"
harness = false

[[bench]]
name = "space_bench"
harness = false

[features]
default = []
# Adds `impl arbitrary::Arbitrary for ...`
arbitrary = ["dep:arbitrary", "ordered-float/arbitrary"]
# Adds serde implementations.
save = ["dep:serde", "dep:serde_repr", "dep:flate2", "ordered-float/serde"]
# Adds automatic parallelism to some algorithms such as raytracing.
threads = ["dep:rayon"]

[dependencies]
arbitrary = { workspace = true, optional = true }
base64 = { workspace = true } # used in serialization
bitflags = { workspace = true }
bytemuck = { workspace = true, features = ["derive", "extern_crate_std"] } # derive used in serialization
cgmath = "0.18.0"
downcast-rs = { version = "1.2.0", default-features = false }
embedded-graphics = "0.8.0"
exhaust = { workspace = true, default-features = false }
flate2 = { version = "1.0.26", optional = true }
futures-core = { workspace = true }
indoc = { workspace = true }
instant = { workspace = true }
itertools = { workspace = true }
log = { workspace = true }
mutants = { workspace = true }
num-traits = { workspace = true }
once_cell = { workspace = true }
ordered-float = { workspace = true }
png-decoder = { version = "0.1.1" }
rand = { workspace = true }
rand_xoshiro = { workspace = true }
rayon = { workspace = true, optional = true }
# rc feature needed because we are [de]serializing `Arc`s
serde = { workspace = true, optional = true, features = ["derive", "rc"] }
serde_repr = { version = "0.1.12", optional = true, default-features = false }
thiserror = { workspace = true }
yield-progress = { version = "0.1.0" }

[build-dependencies]
# for calculation in build script
cgmath = "0.18.0"

[dev-dependencies]
criterion = { workspace = true }
pretty_assertions = { workspace = true }
serde_json = { workspace = true }
# Using tokio for async test-running.
tokio = { workspace = true, features = ["macros", "rt", "sync"] }


[package]
name = "all-is-cubes-content"
version = "0.9.0"
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
description = "Demo/default game content for the all-is-cubes voxel engine."
# TODO: add homepage = "..." when we have one
repository.workspace = true
license = "MIT OR Apache-2.0"
categories = ["games"]
keywords = ["all-is-cubes"]

[package.metadata.docs.rs]
features = ["arbitrary"]

[lib]
# Disable running as benchmark so that the default doesn't interfere with Criterion usage.
bench = false

[[bench]]
name = "gen"
harness = false

[features]
# Adds `UniverseTemplate::Random`.
arbitrary = ["dep:arbitrary", "all-is-cubes/arbitrary"]
# Causes reloading a `UniverseTemplate` to spawn a subprocess to load the template using freshly
# compiled code, for development purposes. Only takes effect if running using `cargo run`.
lukewarm-reload = ["dep:tempfile", "all-is-cubes/save", "all-is-cubes-port"]

[dependencies]
# std feature is required because this library does not yet participate in `maybe_sync`.
all-is-cubes = { workspace = true, features = ["std"] }
all-is-cubes-ui = { workspace = true }
all-is-cubes-port = { workspace = true, optional = true, features = ["import", "native"] }
arbitrary = { workspace = true, optional = true }
either = { workspace = true }
exhaust = { workspace = true }
futures-core = { workspace = true }
hashbrown = { workspace = true }
itertools = { workspace = true }
log = { workspace = true }
macro_rules_attribute = { workspace = true }
noise = { workspace = true } # TODO: not no_std compatible (fixable)
paste = { workspace = true }
petgraph = { workspace = true }
rand = { workspace = true }
rand_xoshiro = { workspace = true }
strum = { workspace = true, features = ["derive"] }
tempfile = { workspace = true, optional = true }


[dev-dependencies]
# Using smol for async test-running.
async-io = { workspace = true }
criterion = { workspace = true }
pretty_assertions = { workspace = true }
# Using smol for async test-running.
# TODO: Consider defining our own macros and stripping down the dependencies.
smol-macros = { workspace = true }

[lints]
workspace = true

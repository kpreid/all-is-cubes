[package]
name = "test-renderers"
version = "0.0.1"
authors = ["Kevin Reid <kpreid@switchb.org>"]
edition = "2021"
rust-version = "1.65"
description = "Rendering tests for all-is-cubes."
publish = false

# Tests use a custom test harness; among other reasons, we want to explicitly skip the
# tests if there is no GPU on the system rather than just making them “pass” falsely.

[lib]
doctest = false
# Disable running as benchmark so that the default doesn't interfere with Criterion usage.
bench = false

[[test]]
name = "ray-render"
doctest = false
harness = false

[[test]]
name = "wgpu-render"
doctest = false
harness = false

[dependencies]
all-is-cubes = { path = "../all-is-cubes", features = ["save", "threads"] }
all-is-cubes-content = { path = "../all-is-cubes-content" }
all-is-cubes-gpu = { path = "../all-is-cubes-gpu", features = ["wgpu"] }
all-is-cubes-ui = { path = "../all-is-cubes-ui" }
async_fn_traits = { workspace = true }
bytemuck = { workspace = true }
# Using clap for parsing test command-line arguments
clap = { workspace = true }
exhaust = { workspace = true }
futures-core = { workspace = true }
futures-util = { workspace = true, features = ["std"] }
image = { workspace = true, features = ["png"] }
itertools = { workspace = true }
rendiff = { workspace = true }
send_wrapper = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
simplelog = { workspace = true }
# tinytemplate is already in the workspace's dependency tree via criterion,
# so let's use it for our output report template.
tinytemplate = "1.2.1"
# Using tokio for async test-running.
tokio = { workspace = true, features = ["macros", "rt", "rt-multi-thread", "parking_lot", "sync"] }
wgpu = { workspace = true }

[lints]
workspace = true

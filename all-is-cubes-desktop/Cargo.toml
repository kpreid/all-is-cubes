[package]
name = "all-is-cubes-desktop"
version = "0.9.0"
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
# TODO: better description
description = "Recursive voxel game."
# TODO: add homepage = "..." when we have one
repository.workspace = true
license = "MIT OR Apache-2.0"
# TODO: revisit categories once it's more settled what's in this package
categories = ["games", "rendering"]
keywords = ["all-is-cubes"]
exclude = ["*.app", "*.desktop"]

[package.metadata.docs.rs]
features = []

[lib]
bench = false

[[bin]]
name = "all-is-cubes"
doc = false # Do not overwrite library crate's documentation just because of the same crate name
bench = false

[[test]]
name = "end-to-end"
required-features = ["import", "record", "terminal"]

[[test]]
name = "gltf-validation"
required-features = ["record"]

[features]
# Each of these features is default, and exists primarily to be disabled for faster development
# builds.
default = ["audio", "import", "record", "terminal"]
# Producing image or video recording, or any exported/saved data.
record = [
    "dep:png",
    "dep:all-is-cubes-mesh", # used in glTF recording
    "all-is-cubes-port/export",
    "all-is-cubes-port/all-formats",
    "euclid/serde", # TODO: stop depending on euclidâ€™s serde impls for record::Script
]
# Importing non-native data formats.
import = ["all-is-cubes-port/import", "all-is-cubes-port/all-formats"]
# Required for `--graphics=terminal` and `--graphics=print`;
# rendering scenes to colored text and interactive terminal sessions.
terminal = ["dep:ratatui", "dep:unicode-width"]
# Game audio output support.
audio = ["dep:kira"]
# Adds rerun logging support. Intended mainly for development of All is Cubes itself.
rerun = [
    "dep:re_sdk",
    "dep:all-is-cubes-mesh",
    "all-is-cubes/rerun",
    "all-is-cubes-gpu/rerun",
]
# TODO: Define a feature with which to turn off windowing & GPU support.

[dependencies]
all-is-cubes = { workspace = true, features = ["auto-threads", "save"] }
# TODO: make template support an optional feature, and this dependency with it
all-is-cubes-content = { workspace = true }
all-is-cubes-gpu = { workspace = true, features = ["auto-threads", "wgpu"] }
all-is-cubes-mesh = { workspace = true, optional = true, features = ["dynamic"] }
# TODO: make all file access an optional feature
all-is-cubes-port = { workspace = true, features = ["import", "native"] }
# TODO: make raytracer optional
all-is-cubes-render = { workspace = true, features = ["raytracer"] }
all-is-cubes-ui = { workspace = true, features = ["session"] }
anyhow = { workspace = true }
cfg-if = { workspace = true }
clap = { workspace = true }
directories-next = "2.0.0"
euclid = { workspace = true, optional = true }
futures-core = { workspace = true }
gilrs = { workspace = true }
hashbrown = { workspace = true }
indicatif = { version = "0.17.0", default-features = false }
itertools = { workspace = true }
kira = { version = "0.10.2", optional = true, default-features = false, features = ["cpal"] }
log = { workspace = true }
png = { workspace = true, optional = true }
rand = { workspace = true, features = ["std", "std_rng"] }
# re_sdk is a data-logging and visualization tool; we are currently using it _only_ for
# development of All is Cubes itself.
re_sdk = { workspace = true, optional = true }
serde = { workspace = true }
serde_json = { workspace = true }
simplelog = { workspace = true }
strum = { workspace = true, features = ["derive", "std"] }
tokio = { workspace = true, features = ["rt-multi-thread", "sync"] }
ratatui = { version = "0.29.0", optional = true, default-features = false, features = ["crossterm"] }
unicode-width = { workspace = true, optional = true }
# We have no true direct dependency on wgpu, but do need to select backends.
# (As of wgpu 0.19, Vulkan is implicitly enabled on Linux.)
wgpu = { workspace = true, features = ["dx12", "metal"] }
# Note on feature selection: winit requires either "x11" or "wayland" to build at all on Linux, which is harmless elsewhere. I picked x11 because it should be the most compatible.
winit = { version = "0.30.0", default-features = false, features = ["x11", "rwh_06"] }
# Enable the log_hiccups feature
yield-progress = { workspace = true, features = ["log_hiccups"] }

[dev-dependencies]
gltf = "1.4.0" # for round-trip test; must match version of gltf-json
pretty_assertions = { workspace = true }
tempfile = { workspace = true }
tokio = { workspace = true, features = ["macros"] }
trycmd = { workspace = true }

[lints]
workspace = true
